apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-server
  namespace: mcp-demo
  labels:
    app: mcp-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcp-server
  template:
    metadata:
      labels:
        app: mcp-server
    spec:
      serviceAccountName: mcp-server
      containers:
      - name: mcp-server
        image: docker.io/maxperreo/mcp-k8s-server:v4
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: mcp-server-secret
              key: anthropic-api-key
        - name: KIALI_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: mcp-server-config
              key: kiali-endpoint
        - name: JAEGER_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: mcp-server-config
              key: jaeger-endpoint
        - name: PROMETHEUS_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: mcp-server-config
              key: prometheus-endpoint
        - name: GRAFANA_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: mcp-server-config
              key: grafana-endpoint
        resources:
          requests:
            memory: "128Mi"
            cpu: "0.25"
          limits:
            memory: "256Mi"
            cpu: "0.5"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
